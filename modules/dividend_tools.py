# modules/dividend_tools.py

import streamlit as st
from modules.stock_data import get_price, get_dividends
from config import DEFAULT_ANNUAL_GOAL
from visualization import plot_dividend_progress
import pandas as pd

def dca_calculator():
    st.subheader("üßÆ ‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡∏ñ‡∏±‡∏ß‡πÄ‡∏â‡∏•‡∏µ‡πà‡∏¢ (DCA)")

    symbol = st.text_input("‡∏ä‡∏∑‡πà‡∏≠‡∏´‡∏∏‡πâ‡∏ô (‡πÄ‡∏ä‡πà‡∏ô PTT, SCB)", value="PTT").upper()
    old_price = st.number_input("‡∏£‡∏≤‡∏Ñ‡∏≤‡∏ã‡∏∑‡πâ‡∏≠‡πÄ‡∏î‡∏¥‡∏°", min_value=0.0)
    old_qty = st.number_input("‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏´‡∏∏‡πâ‡∏ô‡πÄ‡∏î‡∏¥‡∏°", min_value=0)
    new_qty = st.number_input("‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏ó‡∏µ‡πà‡∏à‡∏∞‡∏ã‡∏∑‡πâ‡∏≠‡πÄ‡∏û‡∏¥‡πà‡∏°", min_value=0)

    if st.button("‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì"):
        current_price = get_price(symbol)
        total_cost = (old_price * old_qty) + (current_price * new_qty)
        total_qty = old_qty + new_qty

        if total_qty == 0:
            st.warning("‚ùó ‡∏ï‡πâ‡∏≠‡∏á‡∏°‡∏µ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏´‡∏∏‡πâ‡∏ô‡∏£‡∏ß‡∏°‡∏°‡∏≤‡∏Å‡∏Å‡∏ß‡πà‡∏≤ 0")
            return

        avg_price = total_cost / total_qty
        st.success(f"üìå ‡∏£‡∏≤‡∏Ñ‡∏≤‡∏ñ‡∏±‡∏ß‡πÄ‡∏â‡∏•‡∏µ‡πà‡∏¢‡πÉ‡∏´‡∏°‡πà: {avg_price:.2f} ‡∏ö‡∏≤‡∏ó")
        st.caption(f"(‡∏£‡∏≤‡∏Ñ‡∏≤‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô: {current_price:.2f} ‡∏ö‡∏≤‡∏ó)")

def summary_dividend_chart(portfolio_df, goal_amount=DEFAULT_ANNUAL_GOAL):
    st.subheader("üìà ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏Ñ‡∏∑‡∏ö‡∏´‡∏ô‡πâ‡∏≤‡∏Ç‡∏≠‡∏á‡πÄ‡∏õ‡πâ‡∏≤‡∏´‡∏°‡∏≤‡∏¢‡∏õ‡∏±‡∏ô‡∏ú‡∏•‡∏£‡∏≤‡∏¢‡∏õ‡∏µ")
    total_div = 0.0

    for symbol in portfolio_df["symbol"].unique():
        div = get_dividends(symbol)
        if not div.empty:
            total_div += div["Dividend"].sum() * \
                         portfolio_df[portfolio_df["symbol"] == symbol]["quantity"].iloc[0]

    fig = plot_dividend_progress(total_div, goal_amount)
    st.plotly_chart(fig, use_container_width=True)
    st.markdown(f"üí∞ ‡∏£‡∏ß‡∏°‡∏õ‡∏±‡∏ô‡∏ú‡∏•‡∏à‡∏≤‡∏Å‡∏´‡∏∏‡πâ‡∏ô‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î: **{total_div:,.2f} ‡∏ö‡∏≤‡∏ó**")
