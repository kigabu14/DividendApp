def summary_dividend_chart(portfolio_df, goal_amount=DEFAULT_ANNUAL_GOAL):
    st.subheader("üìà ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏Ñ‡∏∑‡∏ö‡∏´‡∏ô‡πâ‡∏≤‡∏Ç‡∏≠‡∏á‡πÄ‡∏õ‡πâ‡∏≤‡∏´‡∏°‡∏≤‡∏¢‡∏õ‡∏±‡∏ô‡∏ú‡∏•‡∏£‡∏≤‡∏¢‡∏õ‡∏µ")
    
    dividend_data = []
    total_div = 0.0

    for _, row in portfolio_df.iterrows():
        symbol = row["symbol"]
        quantity = row["quantity"]
        avg_price = row["avg_price"]

        dividends_df = get_dividends(symbol)
        if dividends_df.empty:
            continue

        annual_div = dividends_df["Dividend"].sum()
        total = annual_div * quantity
        yield_percent = (annual_div / avg_price) * 100 if avg_price > 0 else 0

        dividend_data.append({
            "‡∏´‡∏∏‡πâ‡∏ô": symbol,
            "‡∏à‡∏≥‡∏ô‡∏ß‡∏ô": quantity,
            "‡∏£‡∏≤‡∏Ñ‡∏≤‡∏ã‡∏∑‡πâ‡∏≠‡πÄ‡∏â‡∏•‡∏µ‡πà‡∏¢": avg_price,
            "‡πÄ‡∏á‡∏¥‡∏ô‡∏õ‡∏±‡∏ô‡∏ú‡∏•/‡∏´‡∏∏‡πâ‡∏ô": round(annual_div, 2),
            "‡∏£‡∏ß‡∏°‡∏õ‡∏±‡∏ô‡∏ú‡∏•": round(total, 2),
            "‡∏ú‡∏•‡∏ï‡∏≠‡∏ö‡πÅ‡∏ó‡∏ô‡∏ï‡πà‡∏≠‡∏õ‡∏µ (%)": round(yield_percent, 2)
        })

        total_div += total

    # ‡πÅ‡∏™‡∏î‡∏á‡∏ï‡∏≤‡∏£‡∏≤‡∏á
    if dividend_data:
        df = pd.DataFrame(dividend_data)
        st.dataframe(df, use_container_width=True)

    # ‡πÅ‡∏™‡∏î‡∏á‡∏Å‡∏£‡∏≤‡∏ü
    fig = plot_dividend_progress(total_div, goal_amount)
    st.plotly_chart(fig, use_container_width=True)
    st.markdown(f"üí∞ ‡∏£‡∏ß‡∏°‡∏õ‡∏±‡∏ô‡∏ú‡∏•‡∏à‡∏≤‡∏Å‡∏´‡∏∏‡πâ‡∏ô‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î: **{total_div:,.2f} ‡∏ö‡∏≤‡∏ó**")
