import streamlit as st
import pandas as pd
import yfinance as yf
from datetime import datetime
from modules.db import get_all_stocks

def get_dividends(symbol):
    try:
        stock = yf.Ticker(symbol + ".BK")  # ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏´‡∏∏‡πâ‡∏ô‡πÑ‡∏ó‡∏¢
        dividends = stock.dividends
        if dividends.empty:
            return pd.DataFrame()
        df = dividends.reset_index()
        df.columns = ["Date", "Dividend"]
        df = df[df["Date"].dt.year >= datetime.now().year - 5]  # 5 ‡∏õ‡∏µ‡∏•‡πà‡∏≤‡∏™‡∏∏‡∏î
        df["Month"] = df["Date"].dt.month
        df["Year"] = df["Date"].dt.year
        df["Symbol"] = symbol
        return df
    except:
        return pd.DataFrame()

def show_calendar():
    st.subheader("üìÖ ‡∏õ‡∏è‡∏¥‡∏ó‡∏¥‡∏ô‡∏õ‡∏±‡∏ô‡∏ú‡∏• (‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡∏´‡∏∏‡πâ‡∏ô‡∏ó‡∏µ‡πà‡∏Ñ‡∏∏‡∏ì‡∏°‡∏µ)")

    # ‡∏î‡∏∂‡∏á‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏´‡∏∏‡πâ‡∏ô‡∏à‡∏≤‡∏Å‡∏û‡∏≠‡∏£‡πå‡∏ï
    df_port = get_all_stocks()
    if df_port.empty:
        st.info("‚õîÔ∏è ‡∏Ñ‡∏∏‡∏ì‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏´‡∏∏‡πâ‡∏ô‡πÉ‡∏ô‡∏û‡∏≠‡∏£‡πå‡∏ï")
        return

    stock_list = df_port["symbol"].unique()

    # ‡πÄ‡∏ï‡∏£‡∏µ‡∏¢‡∏°‡πÇ‡∏Ñ‡∏£‡∏á‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏õ‡∏è‡∏¥‡∏ó‡∏¥‡∏ô
    calendar = {i: [] for i in range(1, 13)}  # 1-12 = Jan to Dec

    with st.spinner("üîÑ ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏õ‡∏±‡∏ô‡∏ú‡∏•..."):
        for symbol in stock_list:
            div = get_dividends(symbol)
            for month in div["Month"].unique():
                calendar[month].append(symbol)

    # ‡∏ä‡∏∑‡πà‡∏≠‡πÄ‡∏î‡∏∑‡∏≠‡∏ô
    months_th = [
        "‡∏°.‡∏Ñ.", "‡∏Å.‡∏û.", "‡∏°‡∏µ.‡∏Ñ.", "‡πÄ‡∏°.‡∏¢.", "‡∏û.‡∏Ñ.", "‡∏°‡∏¥.‡∏¢.",
        "‡∏Å.‡∏Ñ.", "‡∏™.‡∏Ñ.", "‡∏Å.‡∏¢.", "‡∏ï.‡∏Ñ.", "‡∏û.‡∏¢.", "‡∏ò.‡∏Ñ."
    ]
    cols = st.columns(6)

    for i in range(12):
        with cols[i % 6]:
            st.markdown(f"#### {months_th[i]}")
            unique_stocks = sorted(set(calendar[i + 1]))
            if unique_stocks:
                for stock in unique_stocks:
                    st.markdown(f"- {stock}")
            else:
                st.markdown("‡πÑ‡∏°‡πà‡∏°‡∏µ")
